// <auto-generated />
using System;
using Demo1.Server.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Demo1.Server.Migrations
{
    [DbContext(typeof(DbWorker))]
    [Migration("20201124214914_extras")]
    partial class extras
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Demo1.Shared.Model.BrukerInfo", b =>
                {
                    b.Property<int>("InfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserNumber")
                        .HasColumnType("int");

                    b.HasKey("InfoId");

                    b.HasIndex("Rating");

                    b.HasIndex("UserNumber");

                    b.ToTable("BlogPosts");
                });

            modelBuilder.Entity("Demo1.Shared.Model.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentID");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("Demo1.Shared.Model.User", b =>
                {
                    b.Property<int>("UserNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("smalldatetime")
                        .HasColumnName("SystemCreated");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("SystemUpdated");

                    b.Property<string>("SomeInfo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UserSecretInfo")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("UserNumber");

                    b.ToTable("User");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("Demo1.Shared.Model.Employee", b =>
                {
                    b.HasBaseType("Demo1.Shared.Model.User");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.HasIndex("DepartmentID");

                    b.HasDiscriminator().HasValue("Employee");
                });

            modelBuilder.Entity("Demo1.Shared.Model.Student", b =>
                {
                    b.HasBaseType("Demo1.Shared.Model.User");

                    b.Property<int>("StudentNumber")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("Demo1.Shared.Model.BrukerInfo", b =>
                {
                    b.HasOne("Demo1.Shared.Model.User", null)
                        .WithMany("Blogposts")
                        .HasForeignKey("UserNumber");
                });

            modelBuilder.Entity("Demo1.Shared.Model.Employee", b =>
                {
                    b.HasOne("Demo1.Shared.Model.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Demo1.Shared.Model.User", b =>
                {
                    b.Navigation("Blogposts");
                });
#pragma warning restore 612, 618
        }
    }
}
