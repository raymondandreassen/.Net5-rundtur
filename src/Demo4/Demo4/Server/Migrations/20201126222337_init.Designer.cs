// <auto-generated />
using System;
using Demo4.Server.Service;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Demo4.Server.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20201126222337_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Demo4.Shared.AnswerAlteratives", b =>
                {
                    b.Property<int>("AnswerAlternative")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("AnswerAlternative");

                    b.HasIndex("QuestionId");

                    b.ToTable("AnswerAlteratives");
                });

            modelBuilder.Entity("Demo4.Shared.AppUser", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("SystemCreated");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("SystemUpdated");

                    b.Property<int>("StudentNumber")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("UserNumber")
                        .HasColumnType("int");

                    b.Property<string>("UserSecretInfo")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Demo4.Shared.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("QuestionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QuestionareQuestId")
                        .HasColumnType("int");

                    b.HasKey("QuestionId");

                    b.HasIndex("QuestionareQuestId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Demo4.Shared.Questionare", b =>
                {
                    b.Property<int>("QuestId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("QuestId");

                    b.ToTable("Questionares");
                });

            modelBuilder.Entity("Demo4.Shared.AnswerAlteratives", b =>
                {
                    b.HasOne("Demo4.Shared.Question", null)
                        .WithMany("AnswerAlternatives")
                        .HasForeignKey("QuestionId");
                });

            modelBuilder.Entity("Demo4.Shared.Question", b =>
                {
                    b.HasOne("Demo4.Shared.Questionare", null)
                        .WithMany("Questions")
                        .HasForeignKey("QuestionareQuestId");
                });

            modelBuilder.Entity("Demo4.Shared.Question", b =>
                {
                    b.Navigation("AnswerAlternatives");
                });

            modelBuilder.Entity("Demo4.Shared.Questionare", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
